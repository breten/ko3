#!/usr/bin/env node

const path = require('path')
const fs = require('fs')
const _ = require('lodash')
const chalk = require('chalk')
const program = require('commander')
const Ko = require('../lib/ko')
const version = require('../lib/version')

program
	.usage('<prj-name>')
	.option('-s, --skip', 'Skip the package update check')
	.on('--help', function () {
	  console.log('  Examples:')
	  console.log()
	  console.log(chalk.gray('    # serve the project'))
	  console.log('    $ ko3 serve project-name')
	  console.log()
	})
	.parse(process.argv)

if(program.args.length < 1) {
	return program.help()
}
const prjName = program.args[0]
const koConfigFileName = 'ko.config.js'
const koConfigFilePath = path.resolve('.', koConfigFileName)

let options = {}
if(fs.existsSync(koConfigFilePath)) {
	options = require(koConfigFilePath)
}else {
	console.log(chalk.red(`Could not locate ${koConfigFileName}`))
	return
}

options.prjName = prjName

version(() => new Ko(options)
	.then(ko => {
		new ko.server(ko).start()
	})
	.catch((err) => {
		console.log(err)
		process.exit(1)
	}), program.skip)

